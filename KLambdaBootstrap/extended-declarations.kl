(defun cl.symbolsFromArityTable (V1096) (cl.symbolsFromArityTable-h V1096 ()))

(defun cl.symbolsFromArityTable-h (V1099 V1100) (cond ((= () V1099) V1100) ((and (cons? V1099) (cons? (tl V1099))) (let Symbols (adjoin (hd V1099) V1100) (cl.symbolsFromArityTable-h (tl (tl V1099)) Symbols))) ((= () V1100) (simple-error "implementation error in symbolsFromArityTable")) (true (shen.f-error cl.symbolsFromArityTable-h))))

(defun cl.add-primitives (V1101) (let Symbols (cl.symbolsFromArityTable V1101) (let PreviousExternals (trap-error (get cl.shen cl.external-symbols (value *property-vector*)) (lambda E ())) (do (shen.initialise-arity-table V1101) (do (put cl shen.external-symbols (adjoin Symbols PreviousExternals) (value *property-vector*)) (map (lambda Y1094 (lambda Y1095 (update-lambda-table Y1094 Y1095))) Symbols))))))

(cl.add-primitives (cons cl.compile-lisp-file (cons 1 (cons cl.delete-file (cons 1 (cons cl.load-lisp (cons 1 (cons cl.posix-argv (cons 0 (cons cl.exit (cons 1 (cons cl.directory-files (cons 1 (cons cl.ensure-directories-exist (cons 1 (cons cl.copy-file (cons 2 (cons cl.runrogram (cons 1 ())))))))))))))))))))

