(defun shen.symbolsFromArityTable (V1096) (shen.symbolsFromArityTable-h V1096 ()))

(defun shen.symbolsFromArityTable-h (V1099 V1100) (cond ((= () V1099) V1100) ((and (cons? V1099) (cons? (tl V1099))) (let Symbols (adjoin (hd V1099) V1100) (shen.symbolsFromArityTable-h (tl (tl V1099)) Symbols))) ((= () V1100) (simple-error "implementation error in symbolsFromArityTable")) (true (shen.f-error shen.symbolsFromArityTable-h))))

(defun shen.add-primitives (V1101) (let Symbols (shen.symbolsFromArityTable V1101) (let PreviousExternals (trap-error (get shen.shen shen.external-symbols (value *property-vector*)) (lambda E ())) (do (shen.initialise-arity-table V1101) (map (lambda Y1094 (lambda Y1095 (update-lambda-table Y1094 Y1095))) Symbols)))))

(shen.add-primitives (cons compile-lisp-file (cons 1 (cons delete-file (cons 1 (cons load-lisp (cons 1 (cons posix-argv (cons 0 (cons exit (cons 1 (cons directory-files (cons 1 (cons ensure-directories-exist (cons 1 (cons copy-file (cons 2 (cons run-program (cons 1 ())))))))))))))))))))

